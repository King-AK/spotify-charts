/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Spotless plugin
    id 'com.diffplug.spotless' version '6.13.0'

    // Shadow Jar
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

def scalaVersion = "2.12"

spotless {
    scala {
        scalafmt('3.5.9').scalaMajorVersion(scalaVersion)
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.12 in our library project
    implementation 'org.scala-lang:scala-library:2.12.12'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    // CLI Parsing
    implementation 'com.github.scopt:scopt_2.12:4.1.0'

    //Spark
    implementation 'org.apache.spark:spark-sql_2.12:3.5.0'
    implementation 'org.apache.spark:spark-core_2.12:3.5.0'
    implementation 'io.delta:delta-spark_2.12:3.0.0'

    // Numerical libraries
    implementation 'com.twitter:algebird-core_2.12:0.13.10'
    implementation 'org.scalanlp:breeze_2.12:2.1.0'
    implementation 'org.scalanlp:breeze-natives_2.12:2.1.0'

    // Logging
    implementation 'com.typesafe.scala-logging:scala-logging_2.12:3.9.4'
    implementation 'ch.qos.logback:logback-classic:1.2.10'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.12:3.2.16'
    testImplementation 'org.scalatestplus:junit-4-13_2.12:3.2.2.0'
    testImplementation 'org.scalatestplus:scalacheck-1-17_2.12:3.2.17.0'
    testImplementation 'org.scalatestplus:mockito-4-11_2.12:3.2.16.0'
    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.12:1.2.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

version = '0.0.1'

shadowJar {
    zip64 true
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/INDEX.LIST'
    archiveFileName = "${rootProject.name}-${version}.jar"
}

tasks.named('build').configure {
    dependsOn 'spotlessApply'
}

tasks.named('test').configure {
    dependsOn 'spotlessApply'
}

test {
    maxParallelForks = Runtime.runtime.availableProcessors()
    jvmArgs '-Xss64m', '-Xmx2g', '-XX:ReservedCodeCacheSize=1g'
    systemProperty 'spark.driver.memory', '1g'
    systemProperty 'spark.executor.memory', '1g'
    testLogging {
        exceptionFormat = 'full'
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.kingak.sc.App'
}
